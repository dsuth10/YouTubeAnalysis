// Convert a JSON cookies export (with shape { url, cookies: [...] }) to Netscape cookie file format
// Usage: node scripts/convert_cookies.js <input_json> <output_txt>

const fs = require('fs');
const path = require('path');

function toBooleanString(value) {
  return value ? 'TRUE' : 'FALSE';
}

function normalizeDomain(domain, hostOnly) {
  if (!domain) return 'localhost';
  // For non-hostOnly (include subdomains), ensure leading dot
  if (!hostOnly && !domain.startsWith('.')) return '.' + domain;
  return domain;
}

function convert(jsonData) {
  const header = [
    '# Netscape HTTP Cookie File',
    '# This file was generated by scripts/convert_cookies.js',
    '# Format: domain\tflag\tpath\tsecure\texpiration\tname\tvalue',
    '',
  ].join('\n');

  const cookies = Array.isArray(jsonData.cookies) ? jsonData.cookies : [];
  const lines = cookies.map((c) => {
    const domain = normalizeDomain(c.domain || '', c.hostOnly === true);
    const includeSubdomains = toBooleanString(!c.hostOnly);
    const cookiePath = c.path || '/';
    const secure = toBooleanString(!!c.secure);
    const expiry = c.session ? 0 : Math.floor((c.expirationDate || 0));
    const name = c.name || '';
    const value = c.value || '';
    return [domain, includeSubdomains, cookiePath, secure, expiry, name, value].join('\t');
  });

  return header + '\n' + lines.join('\n') + '\n';
}

function main() {
  const [,, inputPath, outputPath] = process.argv;
  if (!inputPath || !outputPath) {
    console.error('Usage: node scripts/convert_cookies.js <input_json> <output_txt>');
    process.exit(1);
  }
  const absIn = path.resolve(inputPath);
  const absOut = path.resolve(outputPath);
  if (!fs.existsSync(absIn)) {
    console.error('Input file not found:', absIn);
    process.exit(1);
  }
  const raw = fs.readFileSync(absIn, 'utf8').trim();
  let data;
  try {
    data = JSON.parse(raw);
  } catch (e) {
    console.error('Failed to parse JSON:', e.message);
    process.exit(1);
  }
  const out = convert(data);
  fs.mkdirSync(path.dirname(absOut), { recursive: true });
  fs.writeFileSync(absOut, out, 'utf8');
  console.log('Wrote Netscape cookie file to', absOut);
}

main();


